<?xml version="1.0"?>


<robot name="mmp30_robot" xmlns:xacro="http://ros.org/wiki/xacro" >


  <!-- <xacro:include filename="$(find phantomx_arm_description)/urdf/phantomx_macro.xacro"/>
  <xacro:phantomx_arm prefix="biosense"/> -->
        
    <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />

   <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
  <VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" hz="10" samples="440" gpu="${gpu}">
    <origin xyz="0 0 0.25" rpy="0 0 3.14159" />
  </VLP-16>

  <!-- <joint name="arm_rover_joint" type="fixed">
  <origin xyz="0 -.1 .07" rpy="0 0 ${180 * (M_PI /180)}" />
  <parent link="base_link" />       
  <child link="arm_base_link" />
  <axis xyz="0 0 0" />
  <limit lower="-2.617" upper="2.617" effort="3" velocity="0.785" />
  </joint> -->





  <!-- Included URDF/XACRO Files -->
  <xacro:include filename="$(find mmp30_description)/urdf/wheel.urdf.xacro" />


  <property name="M_PI" value="3.14159"/>

 <!-- Base Size -->
  <property name="base_x_size" value="0.46" />
  <property name="base_y_size" value="0.33" />
  <property name="base_z_size" value="0.24750000" />

  <!-- Wheel Mounting Positions -->
  <xacro:property name="wheelbase" value="0.33" />
  <xacro:property name="track" value="0.40" />
  <xacro:property name="wheel_vertical_offset" value="0.03" />

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.1" />
  <xacro:property name="wheel_radius" value="0.125" />

  <xacro:macro name="mmp30_robot">

    <!-- Base link is the center of the robot's bottom plate -->
    <link name="base_link">
      <visual>
        <origin xyz="${base_x_size * -.5} ${base_y_size * -.5} 0" rpy="0 0 0" />
        <geometry>
  	        <mesh filename="package://mmp30_description/meshes/MMP30.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${base_z_size/4}" rpy="0 0 0" />
        <geometry>
          <box size="${base_x_size/2} ${base_y_size/2} ${base_z_size/2}"/>
        </geometry>
      </collision>
      
    </link>

    <gazebo reference="base_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>


    <!-- Base footprint is on the ground under the robot -->
    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${wheel_vertical_offset - wheel_radius}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="base_footprint" />
    </joint>

    <!-- Interial link stores the robot's inertial information -->
    <link name="inertial_link">
      <inertial>
        <mass value="46.034"/>
        <origin xyz="0 0 0" />
        <inertia ixx="0.6022" ixy="-0.02364" ixz="-0.1197" iyy="1.7386" iyz="-0.001544" izz="2.0296" />
      </inertial>
    </link>

    <joint name="inertial_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="inertial_link" />
    </joint>

    <!-- IMU Link is the standard mounting position for the UM6 IMU.-->
    <!-- Can be modified with environment variables in /etc/ros/setup.bash -->
    <link name="imu_link"/>
    <joint name="imu_joint" type="fixed">
      <origin xyz="$(optenv MMP30_IMU_XYZ 0.19 0 0.149)" rpy="$(optenv MMP30_IMU_RPY 0 -1.5708 3.1416)" />
      <parent link="base_link" />
      <child link="imu_link" />
    </joint>
    <gazebo reference="imu_link">
    </gazebo>

    <!-- mmp30 wheel macros -->
    <xacro:mmp30_wheel wheel_prefix="front_left">
      <origin xyz="${wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:mmp30_wheel>
    <xacro:mmp30_wheel wheel_prefix="front_right">
      <origin xyz="${wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:mmp30_wheel>
    <xacro:mmp30_wheel wheel_prefix="rear_left">
      <origin xyz="${-wheelbase/2} ${track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:mmp30_wheel>
    <xacro:mmp30_wheel wheel_prefix="rear_right">
      <origin xyz="${-wheelbase/2} ${-track/2} ${wheel_vertical_offset}" rpy="0 0 0" />
    </xacro:mmp30_wheel>



  <link
    name="SensorBaseChassis">
    <inertial>
      <origin
        
        rpy="0 0 0" />
      <mass
        value="1.7565" />
      <inertia
        ixx="0.046345"
        ixy="-0.00014939"
        ixz="1.1248E-08"
        iyy="0.042797"
        iyz="5.3201E-07"
        izz="0.055575" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy= "0 0 0"/>
      <geometry>
        <mesh
          filename="package://MMp30-Main-assembly/meshes/SensorBaseChassis.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>

  </link>





  <joint
    name="Chassis_Joint"
    type="fixed">
    <origin
      xyz="-.1 .80 -.175"
      rpy="${(M_PI/180) * 10} ${(M_PI/180) * 153} ${(M_PI/180) * 53} " />
    <parent
      link="base_link" />
    <child
      link="SensorBaseChassis" />
    <axis
      xyz="0 0 0" />
    <safety_controller
      k_velocity="0" />
  </joint>


   
   <!-- Hokuyo joint -->
	  <joint name="hokuyo_joint" type="prismatic">
	    <origin xyz=".05 0 1" rpy="0 ${(M_PI/180) * 45} ${(M_PI/180) * 0}"/>
	    <parent link="base_link"/>
	    <axis xyz="0 0 1" />
	    <child link="hokuyo_link"/>
      <limit effort="30" velocity="1.0" lower="-2.2" upper="0.7" />
	  </joint>


		<transmission name="hokuyo_trans" type="SimpleTransmission">
			<type>transmission_interface/SimpleTransmission</type>
			<actuator name="hokuyo_motor">
				<mechanicalReduction>1</mechanicalReduction>
			</actuator>
			<joint name="hokuyo_joint">
				<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
			</joint>
		</transmission>



	  <!-- Hokuyo Laser -->
	  <link name="hokuyo_link">
  	    <collision>
  	     
  	      <geometry>
  		<box size="0.1 0.1 0.1"/>
  	      </geometry>
  	    </collision>

  	    <visual>
  	      <origin xyz="0 0 0" rpy="0 0 0"/>
  	      <geometry>
  	        <mesh filename="package://mmp30_description/meshes/hokuyo.dae"/>
  	      </geometry>
  	    </visual>

  	    <inertial>
  	      <mass value="1e-5" />
  	      <origin xyz="0 0 0" rpy="0 0 0"/>
  	      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
  	    </inertial>
	  </link>

    <gazebo reference="hokuyo_link">
      <sensor type="ray" name="head_hokuyo_sensor">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>.25</resolution>
              <min_angle>${-1.570796/2}</min_angle>
              <max_angle>${1.570796/2}</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.10</min>
            <max>5.0</max>
            <resolution>0.001</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <!-- Noise parameters based on published spec for Hokuyo laser
                  achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
                  stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                  reading. -->
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/scan</topicName>
          <frameName>hokuyo_link</frameName>
        </plugin>s
      </sensor>
    </gazebo>

      <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->


  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
	  <origin xyz="0 .05 .55" rpy="0 ${(M_PI/180) * 0} ${(M_PI/180) * 90}"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

    <gazebo reference="camera_link">
      <material>Gazebo/DarkGrey</material>
    </gazebo>


  </xacro:macro>






</robot>
